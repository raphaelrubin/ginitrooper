-- View erstellen
drop view CALC.VIEW_ANL_IFRS;
create view CALC.VIEW_ANL_IFRS as (
        select distinct
            IFRS.PCOMPANY, IFRS.BRANCH, COMPANY, ZM_BPKIND, ZM_BRANCH, ZM_CNTRY, ZM_FRKTYP, ZM_KLAS, ZM_KONSE, ZM_KUSTOE, ZM_KUSY, ZM_KUSY20, ZM_SEKGRP, ZM_AOCURR, ZM_EANLB, ZM_PRKEY, CO_AREA, ZM_EKFK, ZM_INARTN,
                        ZM_IPOFLG, ZM_LOWCRA, ZM_EMBDKZ, ZM_PORTF, ZM_PORTID, ZM_CLSRGI, ZM_CRLENO, ZM_IMP09, IFRS.ZM_BPKU, ZM_DSIKR, CS_CHART, CS_ITEM, CHRT_ACCTS, ZM_INTRAN, ZM_RLSTD, ZM_CONTY, ZM_HA_KA9,
                        ZM_HEDCAT, ZM_EXTCON, ZM_PRODID, ZM_CPICID, ZM_KFSEM, ZM_LIDRP, ZM_PRGART, ZM_STAKOR, IFRS.CUTOFFDATE, 'EUR' as  CURKEY_LC, CURKEY_TC, UNIT, ZM_LBABUC, ZM_BCMID, ZM_CLACC, ZM_DEPOTK, ZM_ANVETA,
                        ZM_NONPRF, ZM_DEALST, ZM_KR_CB, ZM_KR_CH, ZM_BUSMOD, ZM_FINST, ZM_FTRAN, CS_TRN_LC/CM.KURS as CS_TRN_LC, CS_TRN_TC, QUANTITY, ZK_BWKUR5, ZK_FVKUR, ZK_ZAEHL, SOURSYSTEM
                        ,coalesce(IFRS.ZM_EXTNR,BPART.ZM_EXTNR) as ZM_EXTNR
            ,USER as USER_LAST_RUN_AMC_LL
            ,current_timestamp as TIMESTAMP_LAST_RUN
        from ANL.BW_ZBC_IFRS_CURRENT as IFRS
  inner join CALC.SWITCH_PORTFOLIO_CURRENT as PORTFOLIO on IFRS.ZM_PRODID=PORTFOLIO.FACILITY_ID_NLB and IFRS.CUTOFFDATE = PORTFOLIO.CUT_OFF_DATE
  left join IMAP.ZM_EXTNR_CURRENT as BPART on BPART.ZM_BPKU = IFRS.ZM_BPKU and BPART.CUTOFFDATE=IFRS.CUTOFFDATE
  left join IMAP.CURRENCY_MAP as CM on CM.CUT_OFF_DATE = IFRS.CUTOFFDATE and CURKEY_LC= CM.ZIEL_WHRG
  where PORTFOLIO.FACILITY_ID_NLB is not NULL
    --and (left(CS_ITEM,1) in ('1','2') or substr(CS_ITEM, 1, 8) in ('96100005','96200005','96300005') or CS_ITEM in ('9011103004','9011104004','9011109004','9021003004','9021004004','9021009004') )
    and ZM_KFSEM not in ('&55QUANT','&55TEVR') and ZM_RLSTD = 'I'
    and YEAR(IFRS.CUTOFFDATE) >= 2019
    and coalesce(ZM_STAKOR,'ALPAKA') not in ('E','Z')
);

-- CI START FOR ALL TAPES
-- Tabelle erstellen
call STG.TEST_PROC_BACKUP_AND_DROP('AMC','TABLE_ANL_IFRS_CURRENT');
create table AMC.TABLE_ANL_IFRS_CURRENT like CALC.VIEW_ANL_IFRS distribute by hash(CS_ITEM) in SPACE_AMC_A,SPACE_AMC_B,SPACE_AMC_C,SPACE_AMC_D,SPACE_AMC_E,SPACE_AMC_F;
create index AMC.INDEX_ANL_IFRS_CURRENT_CS_ITEM on AMC.TABLE_ANL_IFRS_CURRENT (CS_ITEM);
call STG.TEST_PROC_LOAD_AND_DROP_BACKUP_FOR('AMC','TABLE_ANL_IFRS_CURRENT');
-- CI END FOR ALL TAPES

-- SWITCH View erstellen
call STG.TEST_PROC_DROP_AND_CREATE_SWITCH('AMC','TABLE_ANL_IFRS_CURRENT');