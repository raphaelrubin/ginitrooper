-- VIEW erstellen
drop view CALC.VIEW_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB;
create or replace view CALC.VIEW_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB as
with PORTFOLIO as (
    select P.* from CALC.SWITCH_PORTFOLIO_CURRENT P
),
RISIKO as (
    select R.CUT_OFF_DATE,
           R.FACILITY_ID,
           R.PRJ_CLAIM_AMT,
           R.R_CREDIT_CONVERSION_FACTOR_RATE,
           R.R_EAD_TOTAL_AMT,
           R.R_EXCHANGE_RATE,
           R.R_LOSS_GIVEN_DEFAULT_RATE,
           R.R_STAGE_LLP_CALCULATED_ID,
           R.R_FORWARD_PROB_OF_DEFAULT_RATE,
           R.R_ONE_YEAR_PROB_OF_DEFAULT_RATE,
           R.R_LOAN_LOSS_PROVISION_AMT,
           R.R_ON_BALANCE_ID
           from CALC.SWITCH_FACILITY_KREDITRISIKO_KENNZAHLEN_CURRENT as R
),
RISIKO_LAST_YEAR as (
    select RA.CUT_OFF_DATE,
           RA.FACILITY_ID,
           case when upper(RA.R_ON_BALANCE_ID) = 'ONBALANCE' then round(RA.R_LOAN_LOSS_PROVISION_AMT,2)
           end as ACCMLTD_IMPRMNT_INSTRMNT_PRVS,
           COD.CUT_OFF_DATE as CUT_OFF_DATE_NEXT_YEAR
           from CALC.SWITCH_FACILITY_KREDITRISIKO_KENNZAHLEN_ARCHIVE as RA
           inner join CALC.AUTO_TABLE_CUTOFFDATES as COD
                             on RA.CUT_OFF_DATE = last_day(COD.CUT_OFF_DATE - month(COD.CUT_OFF_DATE) MONTHS)
                                 and COD.IS_ACTIVE
),
ZEB_CONTROL as (
           select R.CUT_OFF_DATE,
                  R.FACILITY_ID,
                  Round(PRJ_CLAIM_AMT,2) as CMMTMNT_INSTRMNT,
                  R.R_CREDIT_CONVERSION_FACTOR_RATE as IFRS9_CCF,
                  R_LOSS_GIVEN_DEFAULT_RATE as IFRS9_LGD,
                  R_STAGE_LLP_CALCULATED_ID,
                  R_FORWARD_PROB_OF_DEFAULT_RATE as PD_IFRS9_12M_INCPTN,
                  R_ONE_YEAR_PROB_OF_DEFAULT_RATE as PD_IFRS9_12M_RD,
                  case when upper(R.R_ON_BALANCE_ID)='OFFBALANCE' then round(R_LOAN_LOSS_PROVISION_AMT,2)
                  end as PRVSNS_OFF_BLNC_SHT,
                  IMP_STTS.ECB_CODE as IMPRMNT_STTS,
                  IAM.ECB_CODE as IMPRMNT_ASSSSMNT_MTHD,
                  RLY.ACCMLTD_IMPRMNT_INSTRMNT_PRVS
           from RISIKO R
           left join RISIKO_LAST_YEAR as RLY on (R.CUT_OFF_DATE, R.FACILITY_ID) = (RLY.CUT_OFF_DATE_NEXT_YEAR, RLY.FACILITY_ID)
           left join SMAP.ECB_INSTRUMENT_IMPAIRMENT_STATUS as IMP_STTS on R.R_STAGE_LLP_CALCULATED_ID = IMP_STTS.NLB_VALUE
           left join SMAP.ECB_INSTRUMENT_IMPAIRMENT_ASSESSMENT_METHOD as IAM on IMP_STTS.ECB_CODE = IAM.NLB_VALUE
),
ZEB_POSITION as (
        select * from CALC.SWITCH_FACILITY_ZEB_RISK_PROVISION_CURRENT
),
KR_BA as (
    select CUT_OFF_DATE,
           FACILITY_ID,
           RWA.ECB_CODE as RWA_MTHD from CALC.SWITCH_KREDITRISIKO_BANKANALYSER_CURRENT KR
    left join SMAP.ECB_INSTRUMENT_RWA_METHOD RWA on KR.ANSATZ = RWA.NLB_VALUE
),
KR_ECB_FINISH as (
    select P.CUT_OFF_DATE,
           P.FACILITY_ID,
           P.CLIENT_NO,
           P.CLIENT_ID_ORIG,
           CONTR.CMMTMNT_INSTRMNT,
           CONTR.IFRS9_CCF,
           CONTR.IFRS9_LGD,
           CONTR.R_STAGE_LLP_CALCULATED_ID,
           CONTR.PD_IFRS9_12M_INCPTN,
           CONTR.PD_IFRS9_12M_RD,
           CONTR.PRVSNS_OFF_BLNC_SHT,
           CONTR.IMPRMNT_STTS,
           CONTR.IMPRMNT_ASSSSMNT_MTHD,
           CONTR.ACCMLTD_IMPRMNT_INSTRMNT_PRVS,
           POS.ZEB_EWB_EUR_ONBALANCE,
           POS.IFRS_EFF_INTEREST_RATE,
           KR_BA.RWA_MTHD
    from PORTFOLIO P
    left join ZEB_CONTROL CONTR
        on (P.CUT_OFF_DATE,P.FACILITY_ID) = (CONTR.CUT_OFF_DATE,CONTR.FACILITY_ID)
    left join ZEB_POSITION POS on (CONTR.CUT_OFF_DATE, CONTR.FACILITY_ID) = (POS.CUT_OFF_DATE, POS.FACILITY_ID)
    left join KR_BA on (P.CUT_OFF_DATE,P.FACILITY_ID) = (KR_BA.CUT_OFF_DATE,KR_BA.FACILITY_ID)
)
select distinct *,
                CURRENT_USER as USER,
                CURRENT_TIMESTAMP as TIMESTAMP_LOAD
from KR_ECB_FINISH;


-- CI START FOR ALL TAPES
-- Current-Tabelle erstellen
call STG.TEST_PROC_BACKUP_AND_DROP('AMC','TABLE_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT');
create table AMC.TABLE_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT like CALC.VIEW_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB distribute by hash(FACILITY_ID) in SPACE_AMC_A,SPACE_AMC_B,SPACE_AMC_C,SPACE_AMC_D,SPACE_AMC_E,SPACE_AMC_F;
create index AMC.INDEX_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT_FACILITY_ID on AMC.TABLE_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT (FACILITY_ID);
create index AMC.INDEX_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT_CLIENT_NO   on AMC.TABLE_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT (CLIENT_NO);
call STG.TEST_PROC_LOAD_AND_DROP_BACKUP_FOR('AMC','TABLE_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT');
-- CI END FOR ALL TAPES

-- SWITCH Views erstellen
call STG.TEST_PROC_DROP_AND_CREATE_SWITCH('AMC','TABLE_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT');