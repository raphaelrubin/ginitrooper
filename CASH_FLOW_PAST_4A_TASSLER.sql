-- View erstellen
drop view CALC.VIEW_CASH_FLOW_PAST_TASSLER;
create or replace view CALC.VIEW_CASH_FLOW_PAST_TASSLER as
    select
        VARCHAR(FACILITY_ID,34) as FACILITY_ID,
        VARCHAR(UMSATZ_ART,64) as UMSATZ_ART,
        FLOAT(TRANSAKTION_WERT_WHRG) as TRANSAKTION_WERT_WHRG,
        VARCHAR(TRANSAKTION_WHRG_SCHL,3) as TRANSAKTION_WHRG_SCHL,
        DATE(VALUTA_DATUM) as VALUTA_DATUM,
        DATE(BUCHUNGS_DATUM) as BUCHUNGS_DATUM,
        VARCHAR(ERFOLGSART,128) as ERFOLGSART,
        DATE(CUT_OFF_DATE) as CUT_OFF_DATE,
        VARCHAR(BUCHUNGS_ID,64) as BUCHUNGS_ID,
        VARCHAR(STORNO_BUCHUNGS_ID,64) as STORNO_BUCHUNGS_ID,
        CURRENT_USER as TAPE_CREATED_USER,
        CURRENT_TIMESTAMP as TAPE_CREATED_TIMESTAMP
    from CALC.SWITCH_CASH_FLOW_PAST_CURRENT
;

-- CI START FOR ALL TAPES
-- Tabelle erstellen
call STG.TEST_PROC_BACKUP_AND_DROP('AMC','TABLE_CASH_FLOW_PAST_TASSLER_CURRENT');
create table AMC.TABLE_CASH_FLOW_PAST_TASSLER_CURRENT like CALC.VIEW_CASH_FLOW_PAST_TASSLER distribute by hash(FACILITY_ID) in SPACE_AMC_A,SPACE_AMC_B,SPACE_AMC_C,SPACE_AMC_D,SPACE_AMC_E,SPACE_AMC_F;
create index AMC.INDEX_CASH_FLOW_PAST_TASSLER_CURRENT_FACILITY_ID on AMC.TABLE_CASH_FLOW_PAST_TASSLER_CURRENT (FACILITY_ID);
call STG.TEST_PROC_LOAD_AND_DROP_BACKUP_FOR('AMC','TABLE_CASH_FLOW_PAST_TASSLER_CURRENT');

-- CI END FOR ALL TAPES

-- SWITCH View erstellen
call STG.TEST_PROC_DROP_AND_CREATE_SWITCH('AMC','TABLE_CASH_FLOW_PAST_TASSLER_CURRENT');