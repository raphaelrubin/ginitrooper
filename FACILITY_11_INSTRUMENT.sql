------------------------------
-- FACILITIES / INSTRUMENTS --
------------------------------
-- Modellierung f√ºr EZB-Dictionary


drop view CALC.VIEW_FACILITY_INSTRUMENT;
create or replace view CALC.VIEW_FACILITY_INSTRUMENT as
with BW_P80_EXT as ( -- Is limited to Portfolio Selection
    select BW_P80.CUT_OFF_DATE,
           BW_P80.FACILITY_ID,
           BW_P80.SUMME_EAD as EAD,
           BW_P80.SUMME_RWAARM as RWAARM,
           BW_P80.Weighted_CCFWER as CCF,
           BW_P80.Weigthed_LGDWER as LGD,
           BW_P80.TRNCH,
           BW_P80.FLG_LBO
    from CALC.SWITCH_FACILITY_BW_P80_EXTERNAL_CURRENT as BW_P80
),
DBT_YLD_SUM_GRSS_CRRYNG_AMNT as (
    select A2C.CUT_OFF_DATE,
           A2C.ASSET_ID,
           sum(case when F_SAP.SAP_INANSPRUCHNAHME <0 then 0 else F_SAP.SAP_INANSPRUCHNAHME end) as SUM_INSPNA
    from CALC.SWITCH_ASSET_TO_COLLATERAL_CURRENT as A2C
    inner join (CALC.SWITCH_COLLATERAL_TO_FACILITY_CURRENT as C2F
                inner join CALC.SWITCH_FACILITY_BW_P80_AOER_CURRENT as F_SAP
                on (C2F.CUT_OFF_DATE, C2F.FACILITY_ID) = (F_SAP.CUT_OFF_DATE,F_SAP.FACILITY_ID))
    on (A2C.CUT_OFF_DATE, A2C.COLLATERAL_ID) = (C2F.CUT_OFF_DATE,C2F.COLLATERAL_ID)
    group by A2C.CUT_OFF_DATE,A2C.ASSET_ID
),
DBT_YLD_FINISH as (
    select C2F.CUT_OFF_DATE,
           C2F.FACILITY_ID,
           case
               when
                       F_SAP.SAP_INANSPRUCHNAHME <= 0
                       then null
               else
                       (Sum(BT.CRE_YRLY_INCM * (F.OWN_SYNDICATE_QUOTA / 100) *
                                (F_SAP.SAP_INANSPRUCHNAHME
                                    /
                                 (case when DBTY.SUM_INSPNA = 0 then Null else DBTY.SUM_INSPNA end)
                                )
                           )
                       ) / F_SAP.SAP_INANSPRUCHNAHME end AS DBT_YLD
    FROM DBT_YLD_SUM_GRSS_CRRYNG_AMNT as DBTY
    inner join ((CALC.SWITCH_COLLATERAL_TO_FACILITY_CURRENT as C2F
        left join (CALC.SWITCH_ASSET_REX_CURRENT as BT
            inner join CALC.SWITCH_ASSET_TO_COLLATERAL_CURRENT A2C ON (A2C.CUT_OFF_DATE,A2C.ASSET_ID) = (BT.CUT_OFF_DATE, BT.CMS_ID_ORIG))
    ON (C2F.CUT_OFF_DATE,C2F.COLLATERAL_ID) = (A2C.CUT_OFF_DATE,A2C.COLLATERAL_ID))
    left join CALC.SWITCH_FACILITY_BW_P80_AOER_CURRENT as F_SAP ON (C2F.CUT_OFF_DATE,C2F.FACILITY_ID) = (F_SAP.CUT_OFF_DATE,F_SAP.FACILITY_ID)
    left join CALC.SWITCH_FACILITY_CURRENT as F ON (C2F.CUT_OFF_DATE,C2F.FACILITY_ID) = (F.CUT_OFF_DATE,F.FACILITY_ID))
    ON (DBTY.CUT_OFF_DATE,DBTY.ASSET_ID) = (A2C.CUT_OFF_DATE,A2C.ASSET_ID)
    WHERE BT.CRE_YRLY_INCM Is Not Null
    GROUP BY C2F.CUT_OFF_DATE,C2F.FACILITY_ID,F_SAP.SAP_INANSPRUCHNAHME, F.OWN_SYNDICATE_QUOTA
),
--ABACUS LTV
ABACUS_LTV_PRE1 as (
    select distinct P2I.CUT_OFF_DATE,
                    P2I.FACILITY_ID,
                    sum(P2I.PROTECTION_ALLOCATED_VALUE) as PRTCTN_ALLCTD_VL_SUM
    from CALC.SWITCH_COLLATERALIZATION_PROTECTION_TO_INSTRUMENT_CURRENT as P2I
    group by P2I.CUT_OFF_DATE,P2I.FACILITY_ID
),
ABACUS_LTV as (
    select ALP1.CUT_OFF_DATE,
           ALP1.FACILITY_ID,
           case when PRTCTN_ALLCTD_VL_SUM <= 0.01 then null
               else (case when F_SAP.SAP_INANSPRUCHNAHME <= 0.01 then 0 else F_SAP.SAP_INANSPRUCHNAHME end) / PRTCTN_ALLCTD_VL_SUM
            end as LTV -- SAP_INANSPRUCHNAHME = GRSS_CRRYNG_AMNT
    from ABACUS_LTV_PRE1 as ALP1
    left join CALC.SWITCH_FACILITY_BW_P80_AOER_CURRENT as F_SAP ON (ALP1.CUT_OFF_DATE,ALP1.FACILITY_ID) = (F_SAP.CUT_OFF_DATE,F_SAP.FACILITY_ID) 
),
CRRLTN_PRE as (
    select SPOT.CUT_OFF_DATE,
           SPOT.INSTRMNT_ID,
           SPOT.PD_CRR_RD,
           EBIL_GF.ANNL_TRNVR_LE,
           case
               when ANNL_TRNVR_LE Is Not Null then
                   case
                       when ANNL_TRNVR_LE > 50000000 then
                               (0.12 *
                                (1 - (Exp(-50 * (case when PD_CRR_RD > 10 then PD_CRR_RD / 100 else PD_CRR_RD end)))) /
                                (1 - Exp(-50)))
                               + (0.24 * (1 - (Exp(
                                   -50 * (case when PD_CRR_RD > 10 then PD_CRR_RD / 100 else PD_CRR_RD end))) /
                                              (1 - Exp(-50))))
                       else
                                   (0.12 * (1 - (Exp(
                                           -50 * (case when PD_CRR_RD > 10 then PD_CRR_RD / 100 else PD_CRR_RD end))) /
                                                (1 - Exp(-50)))) + (0.24 * (1 - (Exp(
                                       -50 * (case when PD_CRR_RD > 10 then PD_CRR_RD / 100 else PD_CRR_RD end))) /
                                                                                (1 - Exp(-50)))) - (0.04 *
                                                                                                    ((case when ANNL_TRNVR_LE > 5000000 then ANNL_TRNVR_LE / 1000000 else 5 end) -
                                                                                                     5) / 45) end
               end AS CRRLTN_CFFCNT
    FROM CALC.SWITCH_FACILITY_SPOT_LOAN_CURRENT as SPOT
             RIGHT JOIN (CALC.SWITCH_CLIENT_EBIL_GLOBAL_FORMAT_CURRENT EBIL_GF
        RIGHT JOIN CALC.SWITCH_FACILITY_CURRENT F ON EBIL_GF.CLIENT_ID = F.CLIENT_ID)
                        ON SPOT.INSTRMNT_ID = F.FACILITY_ID
    WHERE EBIL_GF.ANNL_TRNVR_LE is not null
      and SPOT.PD_CRR_RD is not null
),
FACILITY_PRE as (
    select I2E.CUT_OFF_DATE,
           I2E.FACILITY_ID,
           I2E.CLIENT_ID,
           TYP_INSTR.ECB_CODE as TYP_INSTRMNT,
           case when BW_P80_INT.SAP_INANSPRUCHNAHME <0 then 0 else BW_P80_INT.SAP_INANSPRUCHNAHME end as GRSS_CRRYNG_AMNT_INSTRMNT, -- Nur SAP_INANSPRUCHNAME
           SST.NLB_DESCRIPTION as INTRNL_SGMNT,
           F.ZEB_EWB_EUR_ONBALANCE as ACCMLTD_IMPRMNT_INSTRMNT,
           --TODO: Ersetzen durch F.ZEB_EWB_EUR_ONBALANCE_PREV sobald Vorjahreszahlen da sind
           KR_ECB.ACCMLTD_IMPRMNT_INSTRMNT_PRVS,
           --
           FC.AMOUNT_DUE_AT_MATURITY_EUR as AMNT_D_AT_MTRTY,
           FC.ZEB_E_DAYS_PAST_DUE_NO as DPD,
           FC.CURRENT_CONTRACTUAL_MATURITY_DATE as IFRS9_BHVRL_MTRTY,
           FC.ZEB_R_EAD_TOTAL_AMT_EUR as IFRS9_EAD,
           FC.FVC_LGD_IN_PROZENT,
           SLR.ECB_CODE as SYNDCT_RL,
           case when F.OWN_SYNDICATE_QUOTA > 0 then F.OWN_SYNDICATE_QUOTA/100 end as SYNDCTD_SHR,
           FC.KUNDENBETREUER_OE_BEZEICHNUNG,
           KR_ECB.CMMTMNT_INSTRMNT,
           KR_ECB.IFRS9_CCF,
           KR_ECB.IFRS9_LGD,
           KR_ECB.PD_IFRS9_12M_INCPTN,
           KR_ECB.PD_IFRS9_12M_RD,
           KR_ECB.PRVSNS_OFF_BLNC_SHT,
           KR_ECB.IMPRMNT_STTS,
           KR_ECB.IMPRMNT_ASSSSMNT_MTHD,
           KR_ECB.IFRS_EFF_INTEREST_RATE as EIR,
           KR_ECB.RWA_MTHD,
           BW.CCF,
           BW.EAD,
           BW.FLG_LBO,
           BW.TRNCH,
           BW.RWAARM,
           BW.LGD,
           DYF.DBT_YLD,
           CP.CRRLTN_CFFCNT,
           RTNG.ECB_CODE as RTNG_SCL
           from CALC.SWITCH_PORTFOLIO_INSTRUMENT_TO_ENTITY_CURRENT as I2E
    left join CALC.SWITCH_FACILITY_CORE_CURRENT as FC on (I2E.CUT_OFF_DATE, I2E.FACILITY_ID) = (FC.CUT_OFF_DATE, FC.FACILITY_ID)
    left join CALC.SWITCH_FACILITY_KREDITRISIKO_KENNZAHLEN_ECB_CURRENT KR_ECB on (I2E.CUT_OFF_DATE, I2E.FACILITY_ID) = (KR_ECB.CUT_OFF_DATE, KR_ECB.FACILITY_ID)
    left join DBT_YLD_FINISH DYF on (I2E.CUT_OFF_DATE, I2E.FACILITY_ID) = (DYF.CUT_OFF_DATE, DYF.FACILITY_ID)
    left join CRRLTN_PRE CP on (I2E.CUT_OFF_DATE,I2E.FACILITY_ID) = (CP.CUT_OFF_DATE,CP.INSTRMNT_ID)
    left join BW_P80_EXT as BW on (I2E.CUT_OFF_DATE, I2E.FACILITY_ID) = (BW.CUT_OFF_DATE, BW.FACILITY_ID)
    left join CALC.SWITCH_FACILITY_BW_P80_AOER_CURRENT as BW_P80_INT on (I2E.CUT_OFF_DATE, I2E.FACILITY_ID) = (BW_P80_INT.CUT_OFF_DATE, BW_P80_INT.FACILITY_ID)
    left join CALC.SWITCH_FACILITY_CURRENT as F on (I2E.CUT_OFF_DATE, I2E.FACILITY_ID) = (F.CUT_OFF_DATE, F.FACILITY_ID)
    left join SMAP.ECB_INSTRUMENT_SYNDICATE_LENDER_ROLE as SLR on FC.SYNDICATION_ROLE = SLR.NLB_VALUE
    left join SMAP.SAP_SEGMID_TXT SST on F.SEGMENT = SST.NLB_CODE
    left join SMAP.ECB_ENTITY_RATING_SCALE RTNG on F.RATING_ID_KUNDE = RTNG.NLB_VALUE
    left join SMAP.ECB_INSTRUMENT_INSTRUMENT_TYPE TYP_INSTR on F.PRODUCTTYPE = TYP_INSTR.NLB_VALUE
),
INSTRUMENTS_FINAL as (
    select FP.CUT_OFF_DATE,
           FP.FACILITY_ID,
           FP.CLIENT_ID,
           FP.EAD as SAP_EAD, -- nur external EAD
           FP.TYP_INSTRMNT,
           FP.GRSS_CRRYNG_AMNT_INSTRMNT,
           FP.INTRNL_SGMNT,
           FP.ACCMLTD_IMPRMNT_INSTRMNT,
           FP.ACCMLTD_IMPRMNT_INSTRMNT_PRVS,
           FP.AMNT_D_AT_MTRTY,
           FP.IFRS9_BHVRL_MTRTY,
           FP.IFRS9_EAD,
           --FP.FVC_LGD_IN_PROZENT,
           FP.SYNDCT_RL,
           FP.SYNDCTD_SHR,
           FP.KUNDENBETREUER_OE_BEZEICHNUNG as INTRNL_UNT,
           FP.CMMTMNT_INSTRMNT,
           FP.IFRS9_CCF,
           FP.IFRS9_LGD,
           FP.PD_IFRS9_12M_INCPTN,
           FP.PD_IFRS9_12M_RD,
           -1*FP.PRVSNS_OFF_BLNC_SHT as PRVSNS_OFF_BLNC_SHT,
           FP.IMPRMNT_ASSSSMNT_MTHD,
           FP.EIR,
           FP.CCF,
           FP.FLG_LBO,
           FP.TRNCH,
           FP.RWAARM,
           FP.LGD,
           FP.DBT_YLD,
           FP.RTNG_SCL,
           FP.CRRLTN_CFFCNT,
           -- SPOT
           IP.PRDCT,
           IP.DT_INTRNL_RTNG,
           IP.INTRNL_RTNG,
           IP.INTRNL_RTNG_PRVS,
           IP.INTRNL_RTNG_INCPTN,
           --INTRNL_UNT kommt aus Facility Core KUNDENBETREUER_OE_BEZEICHNUNG
           IP.PYMNT_INTRST_ONLY,
           IP.RFNNC_PRPS,
           IP.TYP_MRTGG,
           IP.DT_ORGNL_MTRTY,
           IP.INSTLMNT_PAY,
           IP.ARRRS_INSTRMNT_12M,
           IP.NMBR_FRBRNC_MSRS,
           case when IP.PD_CRR_RD_T1 > 0 then IP.PD_CRR_RD_T1/100 end as PD_CRR_RD_T1,
           IP.RTNG_MTHD,
           IP.SICR_ASSSSMNT_MTHD,
           IP.RCVD_AMRTSTN_12M,
           IP.RCVD_INTRST_12M,
           IP.RCVD_AMRTSTN_24M,
           IP.RCVD_INTRST_24M,
           IP.SYNDCTD_AGNT,
           IP.SYNDCTD_LNDRS,
           --IP.DT_PRFRMNG_STTS,
           --IP.FRBRNC_STTS_INSTRMNT,
           --IP.POCI,
           --ABACUS
           AF.CNTRCT_ID,
           AF.CRRNCY_DNMNTN,
           AF.DT_INCPTN,
           AF.DFLT_STTS_INSTRMNT,
           AF.DT_DFLT_STTS_INSTRMNT,
           AF.DT_END_INTRST_ONLY,
           AF.LGL_PRCDNG_STTS_LE,
           AF.PRJCT_FNNC_LN,
           AF.PRPS,
           AF.RCRS,
           AF.TYP_AMRTSTN,
           AF.TYP_INTRST_RT,
           AF.ACCNTNG_CLSSFCTN,
           AF.ACCRD_INTRST_INSTRMNT,
           AF.CMMNTMNT_INCPTN_INSTRMNT,
           AF.CRRYNG_AMNT_INSTRMNT,
           AF.DT_LGL_FNL_MTRTY,
           AF.DT_NXT_INTRST_RT_RST,
           AF.OFF_BLNC_SHT_AMNT_INSTRMNT,
           AF.OFF_BLNC_SHT_AMNT_INSTRMNT_PRVS,
           AF.OTSTNDNG_NMNL_AMNT_INSTRMNT,
           AF.OTSTNDNG_NMNL_AMNT_INSTRMNT_PRVS,
           AF.PYMNT_FRQNCY,
           AF.ACCMLTD_WRTFFS_INSTRMNT,
           AF.ARRRS_INSTRMNT,
           AF.CMLTV_RCVRS_SNC_DFLT_INTRMNT,
           AF.DT_PST_D,
           AL.LTV,
           AF.ANNLSD_AGRD_RT,
           AF.INTRST_RT_RST_FRQNCY,
           AF.SYNDCTD_CNTRCT_ID,
           --More than one source
           case when FP.DPD > 0 and (AF.DT_PST_D <> '1970-01-01' or AF.DT_PST_D is null) then FP.DPD
                when (FP.DPD = 0 or FP.DPD is null) and AF.DT_PST_D is not null and AF.DT_PST_D <> '1970-01-01' then DAYS_BETWEEN(DATE(AF.CUT_OFF_DATE),DATE(AF.DT_PST_D))
                when AF.DT_PST_D = '1970-01-01' then null
               end as DPD,
           NVL2(IP.PD_CRR_RD,case when IP.PD_CRR_RD > 0 then IP.PD_CRR_RD/100 end,AF.PD_CRR_RD) as PD_CRR_RD,
           NVL(AF.FRBRNC_STTS_INSTRMNT,IP.FRBRNC_STTS_INSTRMNT) as FRBRNC_STTS_INSTRMNT,
           case when AF.FRBRNC_STTS_INSTRMNT is not null then AF.DT_FRBRNC_STTS
                when AF.FRBRNC_STTS_INSTRMNT is null and IP.FRBRNC_STTS_INSTRMNT is not null then IP.DT_FRBRNC_STTS
                when NVL(AF.FRBRNC_STTS_INSTRMNT,IP.FRBRNC_STTS_INSTRMNT) is null
                 and NVL(AF.DT_FRBRNC_STTS,IP.DT_FRBRNC_STTS) is null then AF.DT_INCPTN
               end as DT_FRBRNC_STTS,
           NVL(AF.PRFRMNG_STTS,IP.PRFRMNG_STTS) as PRFRMNG_STTS,
           case when AF.PRFRMNG_STTS is not null and AF.DT_PRFRMNG_STTS is not null then AF.DT_PRFRMNG_STTS
                when AF.PRFRMNG_STTS is null and IP.PRFRMNG_STTS is not null and IP.DT_PRFRMNG_STTS is not null then IP.DT_PRFRMNG_STTS
                when AF.PRFRMNG_STTS = 11 and AF.DT_PRFRMNG_STTS is null then AF.DT_INCPTN
               end as DT_PRFRMNG_STTS,
           NVL(IP.DT_FRBRNC_STTS_PRVS,AF.DT_FRBRNC_STTS) as DT_FRBRNC_STTS_PRVS,
           case when FP.IMPRMNT_STTS is null and IP.POCI = 'Y' then 27
                else NVL(FP.IMPRMNT_STTS,AF.IMPRMNT_STTS) end as IMPRMNT_STTS,
           case when IP.RWA_MTHD = 2 or FP.RWA_MTHD = 2 then 2
                else NVL(IP.RWA_MTHD, FP.RWA_MTHD) end as RWA_MTHD
    from FACILITY_PRE FP
    left join CALC.SWITCH_FACILITY_SPOT_LOAN_CURRENT IP on (FP.CUT_OFF_DATE,FP.FACILITY_ID) = (IP.CUT_OFF_DATE,IP.INSTRMNT_ID)
    left join CALC.SWITCH_FACILITY_ABACUS_INSTRUMENT_CURRENT AF on (FP.CUT_OFF_DATE,FP.FACILITY_ID) = (AF.CUT_OFF_DATE, AF.INSTRUMENT_ID)
    left join ABACUS_LTV AL on FP.FACILITY_ID = AL.FACILITY_ID
),
--Duplikate beseitigen
--TODO: Sortieren nach sinnvollen Werten z.B. numerisch. Marcus meinte Sortierung ist egal nur Duplikate entfernen.
INSTRUMENTS_DUP as (
    select *
    from (select IF.*,
                 rownumber() over (partition by IF.FACILITY_ID order by IF.FACILITY_ID,IF.SAP_EAD desc nulls last) as RN
          from INSTRUMENTS_FINAL as IF
         )
    where RN = 1
),
data as (
    select
    -- General
    IDUP.CUT_OFF_DATE,
    IDUP.FACILITY_ID,
    IDUP.CNTRCT_ID as CONTRACT_ID,
    IDUP.CRRNCY_DNMNTN as CURRENCY,
    IDUP.DT_INCPTN as INCEPTION_DATE,
    '25050000' as OBSERVED_AGENT_ID,
    'Norddeutsche Landesbank - Girozentrale' as OBSERVED_AGENT_NAME,
    IDUP.PRDCT as PRODUCT, --PRDCT
    -- Classification
    null as BREACHED_COVENANTS, --BRCHD_CVNNTS
    1 as ORIGINATION_CHANNEL, --CHNNL_ORGNTN
    null as INCLUDES_CASH_SWEEP_OR_TRAP,
    null as COVENANT_STATUS, --CVNNT_STTS
    null as COVENANT_TYPE, --CVNNT_TYP
    IDUP.DFLT_STTS_INSTRMNT as DEFAULT_STATUS, --DFLT_STTS_INSTRMNT
    IDUP.DT_DFLT_STTS_INSTRMNT as DEFAULT_STATUS_DATE, --DT_DFLT_STTS_INSTRMNT
    null as PRINCIPAL_GRACE_PERIOD_ENDDATE, --DT_END_GP_PPAL
    IDUP.DT_END_INTRST_ONLY as INTEREST_ONLY_PERIOD_ENDDATE, --DT_END_INTRST_ONLY
    IDUP.DT_FRBRNC_STTS as FORBEARANCE_STATUS_DATE, --DT_FRBRNC_STTS
    IDUP.DT_FRBRNC_STTS_PRVS as FORBEARANCE_STATUS_DATE_PREVIOUS, --DT_FRBRNC_STTS_PRVS
    IDUP.DT_INTRNL_RTNG as INTERNAL_RATING_DATE, --DT_INTRNL_RTNG
    IDUP.DT_PRFRMNG_STTS as PERFORMING_STATUS_DATE, --DT_PRFRMNG_STTS
    null as PERFORMING_STATUS_DATE_PREVIOUS, --DT_PRFRMNG_STTS_PRVS
    null as INTEREST_ONLY_PERIOD_STARTDATE, --DT_STRT_INTRST_ONLY
    null as EXPOSURE_IN_SCOPE, --EXPSR_IN_SCP
    null as FAILED_SYNDICATION, --FLD_SYNDCTN
    IDUP.FLG_LBO as LEVERAGE_BUYOUT_FLAG, --FLG_LBO
    IDUP.FRBRNC_STTS_INSTRMNT as FORBEARANCE_STATUS, --FRBRNC_STTS_INSTRMNT
    IDUP.IMPRMNT_STTS as IMPAIRMENT_STATUS, --IMPRMNT_STTS
    null as IMPAIRMENT_STATUS_PREVIOUS, --IMPRMNT_STTS_PRVS
    IDUP.INTRNL_RTNG as INTERNAL_RATING, --INTRNL_RTNG
    IDUP.INTRNL_RTNG_PRVS as INTERNAL_RATING_PRVS, --INTRNL_RTNG_PRVS
    IDUP.INTRNL_RTNG_INCPTN as INTERNAL_RATING_AT_INCEPTION, --INTRNL_RTNG_INCPTN
    IDUP.INTRNL_SGMNT as INTERNAL_SEGMENT_CODE, --INTRNL_SGMNT
    IDUP.INTRNL_UNT as INTERNAL_UNIT_CODE, --INTRNL_UNT
    false as HAS_LOW_CREDIT_RISK_EXEMPTION, -- LCRE
    IDUP.LGL_PRCDNG_STTS_LE as LEGAL_PROCEEDINGS_STATUS, --LGL_PRCDNG_STTS
    null as DEROGATED_FROM_LENDING_STANDARD, --LND_DRGTN
    --IDUP.POCI as IS_POCI, -- POCI
    IDUP.PRFRMNG_STTS as PERFORMING_STATUS, --PRFRMNG_STTS
    null as PERFORMING_STATUS_PREVIOUS, --PRFRMNG_STTS_PRVS
    IDUP.PRJCT_FNNC_LN as PROJECT_FINANCE_LOAN, --PRJCT_FNNC_LN
    IDUP.PRPS as PURPOSE, --PRPS
    IDUP.PYMNT_INTRST_ONLY as IS_INTEREST_ONLY, -- PYMNT_INTRST_ONLY
    IDUP.RCRS as RECOURSE, --RCRS
    IDUP.RFNNC_PRPS as FOR_REFINANCE_PURPOSE, -- RFNNC_PRPS
    null as FOR_SPECULATIVE_LAND_FINANCING, --SPCLTV_LNDNG
    null as UNDERWRITTEN_TRANSACTION_STATUS, --STTS_UNDRWRTTN_TRNSCTN
    IDUP.TRNCH as TRANCH, --TRNCH
    IDUP.TYP_AMRTSTN as AMORTISATION_TYPE, --TYP_AMRTSTN
    IDUP.TYP_INSTRMNT as INSTRUMENT_TYPE, --TYP_INSTRMNT
    IDUP.TYP_INTRST_RT as INTEREST_RATE_TYPE, --TYP_INTRST_RT
    IDUP.TYP_MRTGG as MORTGAGE_TYPE, --TYP_MRTGG
    null as CRE_OPERATION_TYPE, --TYP_CRE_OPRTN
    null as PRINCIPAL_GRACE_PERIOD_START_DATE, --DT_STRT_GP_PPAL
    -- Financial Information
    IDUP.GRSS_CRRYNG_AMNT_INSTRMNT as GROSS_CARRYING_AMOUNT, --GRSS_CRRYNG_AMNT_INSTRMNT
    null as ACCUMULATED_CHANGES_FAIRVALUE_CREDITRISK, --ACCMLTD_CHNGS_FV_CR_INSTRMNT
    IDUP.ACCNTNG_CLSSFCTN as ACCOUNTING_CLASSIFICATION, --ACCNTNG_CLSSFCTN
    IDUP.ACCRD_INTRST_INSTRMNT as ACCRUED_INTEREST, --ACCRD_INTRST_INSTRMNT
    IDUP.AMNT_D_AT_MTRTY as AMOUNT_DUE_AT_MATURITY, --AMNT_D_AT_MTRTY
    IDUP.CCF as CREDIT_CONVERSION_FACTOR, --CCF
    IDUP.CMMNTMNT_INCPTN_INSTRMNT as COMMITMENT_AMOUNT_INCEPTION, --CMMTMNT_INCPTN_INSTRMNT
    IDUP.CMMTMNT_INSTRMNT as COMMITMENT_AMOUNT, --CMMTMNT_INSTRMNT
    IDUP.CRRYNG_AMNT_INSTRMNT as CARRYING_AMOUNT, --CRRYNG_AMNT_INSTRMNT
    IDUP.DBT_YLD as DEBT_YIELD, --DBT_YLD,
    IDUP.DT_LGL_FNL_MTRTY as FINAL_MATURITY_DATE, --DT_LGL_FNL_MTRTY
    IDUP.DT_NXT_INTRST_RT_RST as NEXT_INTEREST_RATE_RESET_DATE, --DT_NXT_INTRST_RT_RST
    IDUP.DT_ORGNL_MTRTY as ORIGINAL_MATURITY_DATE, --DT_ORGNL_MTRTY
    IDUP.IFRS9_BHVRL_MTRTY as BEHAVIOURAL_MATURITY_IFRS9, --IFRS9_BHVRL_MTRTY
    IDUP.SAP_EAD as EXPOSURE_AT_DEFAULT, --EAD
    IDUP.IFRS9_CCF as CREDIT_CONVERSION_FACTOR_IFRS9, --IFRS9_CCF
    IDUP.IFRS9_EAD as EXPOSURE_AT_DEFAULT_IFRS9, --IFRS9_EAD
    IDUP.INSTLMNT_PAY as INSTALMENT_PAYABLE, --INSTLMNT_PAY
    IDUP.OFF_BLNC_SHT_AMNT_INSTRMNT as OFF_BALANCE_SHEET_AMOUNT, --OFF_BLNC_SHT_AMNT_INSTRMNT
    IDUP.OFF_BLNC_SHT_AMNT_INSTRMNT_PRVS as OFF_BALANCE_SHEET_AMOUNT_PREVIOUS, --OFF_BLNC_SHT_AMNT_INSTRMNT_PRVS
    IDUP.OTSTNDNG_NMNL_AMNT_INSTRMNT as OUTSTANDING_NOMINAL_AMOUNT, --OTSTNDNG_NMNL_AMNT_INSTRMNT
    IDUP.OTSTNDNG_NMNL_AMNT_INSTRMNT_PRVS as OUTSTANDING_NOMINAL_AMOUNT_PREVIOUS, --OTSTNDNG_NMNL_AMNT_INSTRMNT_PRVS
    IDUP.PRVSNS_OFF_BLNC_SHT as OFF_BALANCE_SHEET_PROVISIONS, --PRVSNS_OFF_BLNC_SHT
    IDUP.PYMNT_FRQNCY as PAYMENT_FREQUENCY, --PYMNT_FRQNCY
    null as RETENTION_SHARE, --RTNTN_SHR
    IDUP.RWAARM as RWA, --RWA,
    IDUP.RWA_MTHD as RWA_METHOD, --RWA_MTHD
    null as SPONSOR_NAME, --SPNSR_NM
    -- Impairment
    IDUP.ACCMLTD_IMPRMNT_INSTRMNT as ACCUMULATED_IMPAIRMENT, --ACCMLTD_IMPRMNT_INSTRMNT
    IDUP.ACCMLTD_IMPRMNT_INSTRMNT_PRVS as ACCUMULATED_IMPAIRMENT_PREVIOUS, --ACCMLTD_IMPRMNT_INSTRMNT_PRVS
    IDUP.ACCMLTD_WRTFFS_INSTRMNT as ACCUMULATED_WRITEOFFS, --ACCMLTD_WRTFFS_INSTRMNT
    IDUP.ARRRS_INSTRMNT as EXPOSURE_INARREAR, --ARRRS_INSTRMNT
    IDUP.ARRRS_INSTRMNT_12M as EXPOSURE_INARREAR_HIGHEST_12M, --ARRRS_INSTRMNT_12M
    IDUP.CMLTV_RCVRS_SNC_DFLT_INTRMNT as CUMULATED_RECOVERIES_SINCE_DEFAULT, --CMLTV_RCVRS_SNC_DFLT_INSTRMNT
    IDUP.DPD as DAYS_PAST_DUE, --DPD
    null as DAYS_PAST_DUE_HIGHEST_12M, --DPD_12M
    null as DAYS_PAST_DUE_HIGHEST_12M_FORBEARANCE, --DPD_12M_FRBRNC_STTS
    null as DAYS_PAST_DUE_HIGHEST_12M_PERFORMING, --DPD_12M_PRFRMNG_STTS
    null as DAYS_PAST_DUE_HIGHEST_24M_FORBEARANCE, --DPD_24M_FRBRNC_STTS
    null as DAYS_PAST_DUE_HIGHEST_24M_PERFORMING, --DPD_24M_PRFRMNG_STTS
    null as DAYS_PAST_DUE_FORBEARANCE, --DPD_FRBRNC_STTS
    null as DAYS_PAST_DUE_PERFORMING, --DPD_PRFRMNG_STTS
    null as IMPAIRMENT_STATUS_DATE, --DT_IMPRMNT_STTS
    null as IMPAIRMENT_STATUS_DATE_PREVIOUS, --DT_IMPRMNT_STTS_PRVS
    IDUP.DT_PST_D as PAST_DUE_DATE, --DT_PST_D
    IDUP.IMPRMNT_ASSSSMNT_MTHD as IMPAIRMENT_ASSESSMENT_METHOD, --IMPRMNT_ASSSSMNT_MTHD
    null as IMPAIRMENT_CALCULATION_METHOD, --IMPRMNT_CLCLTN_MTHD
    IDUP.NMBR_FRBRNC_MSRS as FORBEARANCE_NUMBER, --NMBR_FRBRNC_MSRS
    -- Indicators
    CRRLTN_CFFCNT as CORRELATION_COEFFICIENT, --CRRLTN_CFFCNT
    IDUP.IFRS9_LGD as LGD_IFRS9, --IFRS9_LGD
    IDUP.LGD as LGD,
    IDUP.LTV as LTV,
    null as LTV_INCEPTION, --LTV_INCPTN
    null as LTV_NONPERFORMING, --LTV_NPE
    null as PROBABILITY_OF_DEFAULT_CRR_INCEPTION, --PD_CRR_INCPTN
    IDUP.PD_CRR_RD as PROBABILITY_OF_DEFAULT_CRR, --PD_CRR_RD
    IDUP.PD_CRR_RD_T1 as PROBABILITY_OF_DEFAULT_CRR_PREV_YEAR, --PD_CRR_RD_T1
    IDUP.PD_IFRS9_12M_INCPTN as PROBABILITY_OF_DEFAULT_IFRS9_12M_INCEPTION, --PD_IFRS9_12M_INCPTN
    IDUP.PD_IFRS9_12M_RD as PROBABILITY_OF_DEFAULT_IFRS9_12M, --PD_IFRS9_12M_RD
    null as PROBABILITY_OF_DEFAULT_IFRS9_12M_PREV_YEAR, --PD_IFRS9_12M_RD_T1
    null as PROBABILITY_OF_DEFAULT_IFRS9_LIFETIME_INCEPTION, --PD_IFRS9_LFTM_INCPTN
    null as PROBABILITY_OF_DEFAULT_IFRS9_RMNNG_LIFETIME_INCEPTION, --PD_IFRS9_RMNNG_LFTM_INCPTN
    null as PROBABILITY_OF_DEFAULT_IFRS9_RMNNG_LIFETIME, --PD_IFRS9_RMNNG_LFTM_RD
    IDUP.RTNG_MTHD as RATING_METHOD, --RTNG_MTHD
    IDUP.RTNG_SCL as RATING_SCALE, --RTNG_SCL
    IDUP.SICR_ASSSSMNT_MTHD as SIGNIFICANT_INCREASE_ASSESSMENT_METHOD, --SICR_ASSSSMNT_MTHD
    -- Interest Rates
    IDUP.ANNLSD_AGRD_RT as INTEREST_RATE, --ANNLSD_AGRD_RT
    IDUP.EIR as EFFECTIVE_INTEREST_RATE, --EIR
    null as EFFECTIVE_INTEREST_RATE_INCEPTION, --EIR_INCPTN
    IDUP.INTRST_RT_RST_FRQNCY as INTEREST_RATE_RESET_FREQUENCY, --INTRST_RT_RST_FRQNCY
    -- Optional
    null as ADD_NMRC1,
    null as ADD_NMRC2,
    null as ADD_NMRC3,
    null as ADD_NMRC4,
    null as ADD_DT1,
    null as ADD_DT2,
    null as ADD_DT3,
    null as ADD_TXT1,
    null as ADD_TXT2,
    null as ADD_TXT3,
    -- Servicing
    IDUP.RCVD_AMRTSTN_12M as RECEIVED_AMORTIZATION_12M, --RCVD_AMRTSTN_12M
    IDUP.RCVD_AMRTSTN_24M as RECEIVED_AMORTIZATION_24M, --RCVD_AMRTSTN_24M
    IDUP.RCVD_INTRST_12M as RECEIVED_INTEREST_12M, --RCVD_INTRST_12M
    IDUP.RCVD_INTRST_24M as RECEIVED_INTEREST_24M, --RCVD_INTRST_24M
    -- Syndication
    IDUP.SYNDCT_RL as SYNDICATE_LENDER_ROLE, --SYNDCT_RL
    IDUP.SYNDCTD_AGNT as SYNDICATE_AGENT_NAME, --SYNDCTD_AGNT
    IDUP.SYNDCTD_CNTRCT_ID as SYNDICATED_CONTRACT_ID, --SYNDCTD_CNTRCT_ID
    IDUP.SYNDCTD_LNDRS as SYNDICATE_LENDERS_NAMES, --SYNDCTD_LNDRS
    IDUP.SYNDCTD_SHR as SYNDICATE_SHARE, --SYNDCTD_SHR
    null as SYNDICATION_TYPE, --SYNDCTN_TYP
    -- COVID19
    null as EBA_CMPLNT_MRTR_ST_C19,
    null as DT_CMPLNT_MRTR_STTS_C19,
    null as DT_CMPLNT_MRTR_STTS_PRVS_C19,
    null as MTRTY_LTST_MRTR_C19,
    null as TYP_CMPLNT_MRTR_C19,
    null as GRC_PRD_CPTL_INTRST_C19,
    null as CMPLNT_MRTR_C19_NM,
    null as FRBRNC_STTS_C19,
    null as DT_FRBRNC_STTS_C19,
    null as DT_FRBRNC_STTS_PRVS_C19,
    null as MTRTY_LTST_FRBRNC_MSR_C19,
    null as DT_END_GP_PPAL_C19,
    null as DT_END_INTRST_ONLY_C19,
    null as SBJCT_PBLC_GRNT_SCHM_C19,
    null as PBLC_GRNT_SCHM_C19_NM,
    null as PMNT_PBLC_GRNT_SCHM_C19
from INSTRUMENTS_DUP as IDUP
)
select
    -- General
    cast(CUT_OFF_DATE as DATE) as CUT_OFF_DATE,
    cast(FACILITY_ID as VARCHAR(60)) as FACILITY_ID,
    nullif(cast(CONTRACT_ID as VARCHAR(60)),null) as CONTRACT_ID,
    nullif(cast(CURRENCY as VARCHAR(3)),null) as CURRENCY,
    nullif(cast(INCEPTION_DATE as DATE),null) as INCEPTION_DATE,
    nullif(cast(OBSERVED_AGENT_ID as VARCHAR(50)),null) as OBSERVED_AGENT_ID,
    nullif(cast(OBSERVED_AGENT_NAME as VARCHAR(255)),null) as OBSERVED_AGENT_NAME,
    nullif(cast(PRODUCT as VARCHAR(255)),null) as PRODUCT, --PRDCT,
    -- Classification
    nullif(cast(BREACHED_COVENANTS as VARCHAR(255)),null) as BREACHED_COVENANTS, --BRCHD_CVNNTS,
    nullif(cast(ORIGINATION_CHANNEL as BIGINT),null) as ORIGINATION_CHANNEL, --CHNNL_ORGNTN,
    nullif(cast(INCLUDES_CASH_SWEEP_OR_TRAP as BOOLEAN), null) as INCLUDES_CASH_SWEEP_OR_TRAP, --CSH_SWP_TRP,
    nullif(cast(COVENANT_STATUS as BIGINT),null) as COVENANT_STATUS, --CVNNT_STTS,
    nullif(cast(COVENANT_TYPE as BIGINT),null) as COVENANT_TYPE, --CVNNT_TYP,
    nullif(cast(DEFAULT_STATUS as BIGINT),null) as DEFAULT_STATUS, --DFLT_STTS_INSTRMNT,
    nullif(cast(DEFAULT_STATUS_DATE as DATE),null) as DEFAULT_STATUS_DATE, --DT_DFLT_STTS_INSTRMNT,
    nullif(cast(PRINCIPAL_GRACE_PERIOD_ENDDATE as DATE),null) as PRINCIPAL_GRACE_PERIOD_ENDDATE, --DT_END_GP_PPAL,
    nullif(cast(INTEREST_ONLY_PERIOD_ENDDATE as DATE),null) as INTEREST_ONLY_PERIOD_ENDDATE, --DT_END_INTRST_ONLY,
    nullif(cast(FORBEARANCE_STATUS_DATE as DATE),null) as FORBEARANCE_STATUS_DATE, --DT_FRBRNC_STTS,
    nullif(cast(FORBEARANCE_STATUS_DATE_PREVIOUS as DATE),null) as FORBEARANCE_STATUS_DATE_PREVIOUS, --DT_FRBRNC_STTS_PRVS,
    nullif(cast(INTERNAL_RATING_DATE as DATE),null) as INTERNAL_RATING_DATE, --DT_INTRNL_RTNG,
    nullif(cast(PERFORMING_STATUS_DATE as DATE),null) as PERFORMING_STATUS_DATE, --DT_PRFRMNG_STTS,
    nullif(cast(PERFORMING_STATUS_DATE_PREVIOUS as DATE),null) as PERFORMING_STATUS_DATE_PREVIOUS, --DT_PRFRMNG_STTS_PRVS,
    nullif(cast(INTEREST_ONLY_PERIOD_STARTDATE as DATE),null) as INTEREST_ONLY_PERIOD_STARTDATE, --DT_STRT_INTRST_ONLY,
    nullif(cast(EXPOSURE_IN_SCOPE as Varchar(5)),null) as EXPOSURE_IN_SCOPE, --EXPSR_IN_SCP,
    nullif(cast(FAILED_SYNDICATION as BOOLEAN), null) as FAILED_SYNDICATION, --FLD_SYNDCTN,
    nullif(cast(LEVERAGE_BUYOUT_FLAG as BOOLEAN), null) as LEVERAGE_BUYOUT_FLAG, --FLG_LBO,
    nullif(cast(FORBEARANCE_STATUS as BIGINT),null) as FORBEARANCE_STATUS, --FRBRNC_STTS_INSTRMNT,
    nullif(cast(IMPAIRMENT_STATUS as BIGINT),null) as IMPAIRMENT_STATUS, --IMPRMNT_STTS,
    nullif(cast(IMPAIRMENT_STATUS_PREVIOUS as BIGINT),null) as IMPAIRMENT_STATUS_PREVIOUS, --IMPRMNT_STTS_PRVS,
    nullif(cast(INTERNAL_RATING as BIGINT),null) as INTERNAL_RATING, --INTRNL_RTNG,
    nullif(cast(INTERNAL_RATING_PRVS as BIGINT),null) as INTERNAL_RATING_PRVS, --INTRNL_RTNG_PRVS,
    nullif(cast(INTERNAL_RATING_AT_INCEPTION as BIGINT),null) as INTERNAL_RATING_AT_INCEPTION, --INTRNL_RTNG_INCPTN,
    nullif(cast(INTERNAL_SEGMENT_CODE as VARCHAR(255)),null) as INTERNAL_SEGMENT_CODE, --INTRNL_SGMNT,
    nullif(cast(INTERNAL_UNIT_CODE as VARCHAR(255)),null) as INTERNAL_UNIT_CODE, --INTRNL_UNT,
    nullif(cast(HAS_LOW_CREDIT_RISK_EXEMPTION as BOOLEAN), null) as HAS_LOW_CREDIT_RISK_EXEMPTION, --LCRE,
    nullif(cast(LEGAL_PROCEEDINGS_STATUS as BIGINT),null) as LEGAL_PROCEEDINGS_STATUS, --LGL_PRCDNG_STTS,
    nullif(cast(DEROGATED_FROM_LENDING_STANDARD as BOOLEAN), null) as DEROGATED_FROM_LENDING_STANDARD, --LND_DRGTN,
    --nullif(cast(IS_POCI as BOOLEAN), null) as IS_POCI, --POCI,
    nullif(cast(PERFORMING_STATUS as BIGINT),null) as PERFORMING_STATUS, --PRFRMNG_STTS,
    nullif(cast(PERFORMING_STATUS_PREVIOUS as BIGINT),null) as PERFORMING_STATUS_PREVIOUS, --PRFRMNG_STTS_PRVS,
    nullif(cast(PROJECT_FINANCE_LOAN as BIGINT),null) as PROJECT_FINANCE_LOAN, --PRJCT_FNNC_LN,
    nullif(cast(PURPOSE as BIGINT),null) as PURPOSE, --PRPS,
    nullif(cast(IS_INTEREST_ONLY as BOOLEAN), null) as IS_INTEREST_ONLY, --PYMNT_INTRST_ONLY,
    nullif(cast(RECOURSE as BIGINT),null) as RECOURSE, --RCRS,
    nullif(cast(FOR_REFINANCE_PURPOSE as BOOLEAN), null) as FOR_REFINANCE_PURPOSE, --RFNNC_PRPS,
    nullif(cast(FOR_SPECULATIVE_LAND_FINANCING as BOOLEAN), null) as FOR_SPECULATIVE_LAND_FINANCING, --SPCLTV_LNDNG,
    nullif(cast(UNDERWRITTEN_TRANSACTION_STATUS as BIGINT),null) as UNDERWRITTEN_TRANSACTION_STATUS, --STTS_UNDRWRTTN_TRNSCTN,
    nullif(cast(TRANCH as BIGINT),null) as TRANCH, --TRNCH,
    nullif(cast(AMORTISATION_TYPE as BIGINT),null) as AMORTISATION_TYPE, --TYP_AMRTSTN,
    nullif(cast(INSTRUMENT_TYPE as BIGINT),null) as INSTRUMENT_TYPE, --TYP_INSTRMNT,
    nullif(cast(INTEREST_RATE_TYPE as BIGINT),null) as INTEREST_RATE_TYPE, --TYP_INTRST_RT,
    nullif(cast(MORTGAGE_TYPE as BIGINT),null) as MORTGAGE_TYPE, --TYP_MRTGG,
    nullif(cast(CRE_OPERATION_TYPE as BIGINT),null) as CRE_OPERATION_TYPE, --TYP_CRE_OPRTN,
    nullif(cast(PRINCIPAL_GRACE_PERIOD_START_DATE as DATE),null) as PRINCIPAL_GRACE_PERIOD_START_DATE, --DT_STRT_GP_PPAL,
    -- Financial Information
    nullif(cast(GROSS_CARRYING_AMOUNT as FLOAT),null) as GROSS_CARRYING_AMOUNT, --GRSS_CRRYNG_AMNT_INSTRMNT,
    nullif(cast(ACCUMULATED_CHANGES_FAIRVALUE_CREDITRISK as FLOAT),null) as ACCUMULATED_CHANGES_FAIRVALUE_CREDITRISK, --ACCMLTD_CHNGS_FV_CR_INSTRMNT,
    nullif(cast(ACCOUNTING_CLASSIFICATION as BIGINT),null) as ACCOUNTING_CLASSIFICATION, --ACCNTNG_CLSSFCTN,
    nullif(cast(ACCRUED_INTEREST as FLOAT),null) as ACCRUED_INTEREST, --ACCRD_INTRST_INSTRMNT,
    nullif(cast(AMOUNT_DUE_AT_MATURITY as FLOAT),null) as AMOUNT_DUE_AT_MATURITY, --AMNT_D_AT_MTRTY,
    nullif(cast(CREDIT_CONVERSION_FACTOR as FLOAT),null) as CREDIT_CONVERSION_FACTOR, --CCF,
    nullif(cast(COMMITMENT_AMOUNT_INCEPTION as FLOAT),null) as COMMITMENT_AMOUNT_INCEPTION, --CMMTMNT_INCPTN_INSTRMNT,
    nullif(cast(COMMITMENT_AMOUNT as FLOAT),null) as COMMITMENT_AMOUNT, --CMMTMNT_INSTRMNT,
    nullif(cast(CARRYING_AMOUNT as FLOAT),null) as CARRYING_AMOUNT, --CRRYNG_AMNT_INSTRMNT,
    nullif(cast(DEBT_YIELD as FLOAT),null) as DEBT_YIELD, --DBT_YLD,
    nullif(cast(FINAL_MATURITY_DATE as DATE),null) as FINAL_MATURITY_DATE, --DT_LGL_FNL_MTRTY,
    nullif(cast(NEXT_INTEREST_RATE_RESET_DATE as DATE),null) as NEXT_INTEREST_RATE_RESET_DATE, --DT_NXT_INTRST_RT_RST,
    nullif(cast(ORIGINAL_MATURITY_DATE as DATE),null) as ORIGINAL_MATURITY_DATE, --DT_ORGNL_MTRTY,
    nullif(cast(BEHAVIOURAL_MATURITY_IFRS9 as BIGINT),null) as BEHAVIOURAL_MATURITY_IFRS9, --IFRS9_BHVRL_MTRTY,
    nullif(cast(EXPOSURE_AT_DEFAULT as FLOAT),null) as EXPOSURE_AT_DEFAULT, --EAD,
    nullif(cast(CREDIT_CONVERSION_FACTOR_IFRS9 as FLOAT),null) as CREDIT_CONVERSION_FACTOR_IFRS9, --IFRS9_CCF,
    nullif(cast(EXPOSURE_AT_DEFAULT_IFRS9 as FLOAT),null) as EXPOSURE_AT_DEFAULT_IFRS9, --IFRS9_EAD,
    nullif(cast(INSTALMENT_PAYABLE as FLOAT),null) as INSTALMENT_PAYABLE, --INSTLMNT_PAY,
    nullif(cast(OFF_BALANCE_SHEET_AMOUNT as FLOAT),null) as OFF_BALANCE_SHEET_AMOUNT, --OFF_BLNC_SHT_AMNT_INSTRMNT,
    nullif(cast(OFF_BALANCE_SHEET_AMOUNT_PREVIOUS as FLOAT),null) as OFF_BALANCE_SHEET_AMOUNT_PREVIOUS, --OFF_BLNC_SHT_AMNT_INSTRMNT_PRVS,
    nullif(cast(OUTSTANDING_NOMINAL_AMOUNT as FLOAT),null) as OUTSTANDING_NOMINAL_AMOUNT, --OTSTNDNG_NMNL_AMNT_INSTRMNT,
    nullif(cast(OUTSTANDING_NOMINAL_AMOUNT_PREVIOUS as FLOAT),null) as OUTSTANDING_NOMINAL_AMOUNT_PREVIOUS, --OTSTNDNG_NMNL_AMNT_INSTRMNT_PRVS,
    nullif(cast(OFF_BALANCE_SHEET_PROVISIONS as FLOAT),null) as OFF_BALANCE_SHEET_PROVISIONS, --PRVSNS_OFF_BLNC_SHT,
    nullif(cast(PAYMENT_FREQUENCY as BIGINT),null) as PAYMENT_FREQUENCY, --PYMNT_FRQNCY,
    nullif(cast(RETENTION_SHARE as FLOAT),null) as RETENTION_SHARE, --RTNTN_SHR,
    nullif(cast(RWA as FLOAT),null) as RWA, --RWA,
    nullif(cast(RWA_METHOD as BIGINT),null) as RWA_METHOD, --RWA_MTHD,
    nullif(cast(SPONSOR_NAME as VARCHAR(255)),null) as SPONSOR_NAME, --SPNSR_NM,
    -- Impairment
    nullif(cast(ACCUMULATED_IMPAIRMENT as FLOAT),null) as ACCUMULATED_IMPAIRMENT, --ACCMLTD_IMPRMNT_INSTRMNT,
    nullif(cast(ACCUMULATED_IMPAIRMENT_PREVIOUS as FLOAT),null) as ACCUMULATED_IMPAIRMENT_PREVIOUS, --ACCMLTD_IMPRMNT_INSTRMNT_PRVS,
    nullif(cast(ACCUMULATED_WRITEOFFS as FLOAT),null) as ACCUMULATED_WRITEOFFS, --ACCMLTD_WRTFFS_INSTRMNT,
    nullif(cast(EXPOSURE_INARREAR as FLOAT),null) as EXPOSURE_INARREAR, --ARRRS_INSTRMNT,
    nullif(cast(EXPOSURE_INARREAR_HIGHEST_12M as FLOAT),null) as EXPOSURE_INARREAR_HIGHEST_12M, --ARRRS_INSTRMNT_12M,
    nullif(cast(CUMULATED_RECOVERIES_SINCE_DEFAULT as FLOAT),null) as CUMULATED_RECOVERIES_SINCE_DEFAULT, --CMLTV_RCVRS_SNC_DFLT_INSTRMNT,
    nullif(cast(DAYS_PAST_DUE as BIGINT),null) as DAYS_PAST_DUE, --DPD,
    nullif(cast(DAYS_PAST_DUE_HIGHEST_12M as BIGINT),null) as DAYS_PAST_DUE_HIGHEST_12M, --DPD_12M,
    nullif(cast(DAYS_PAST_DUE_HIGHEST_12M_FORBEARANCE as BIGINT),null) as DAYS_PAST_DUE_HIGHEST_12M_FORBEARANCE, --DPD_12M_FRBRNC_STTS,
    nullif(cast(DAYS_PAST_DUE_HIGHEST_12M_PERFORMING as BIGINT),null) as DAYS_PAST_DUE_HIGHEST_12M_PERFORMING, --DPD_12M_PRFRMNG_STTS,
    nullif(cast(DAYS_PAST_DUE_HIGHEST_24M_FORBEARANCE as BIGINT),null) as DAYS_PAST_DUE_HIGHEST_24M_FORBEARANCE, --DPD_24M_FRBRNC_STTS,
    nullif(cast(DAYS_PAST_DUE_HIGHEST_24M_PERFORMING as BIGINT),null) as DAYS_PAST_DUE_HIGHEST_24M_PERFORMING, --DPD_24M_PRFRMNG_STTS,
    nullif(cast(DAYS_PAST_DUE_FORBEARANCE as BIGINT),null) as DAYS_PAST_DUE_FORBEARANCE, --DPD_FRBRNC_STTS,
    nullif(cast(DAYS_PAST_DUE_PERFORMING as BIGINT),null) as DAYS_PAST_DUE_PERFORMING, --DPD_PRFRMNG_STTS,
    nullif(cast(IMPAIRMENT_STATUS_DATE as DATE),null) as IMPAIRMENT_STATUS_DATE, --DT_IMPRMNT_STTS,
    nullif(cast(IMPAIRMENT_STATUS_DATE_PREVIOUS as DATE),null) as IMPAIRMENT_STATUS_DATE_PREVIOUS, --DT_IMPRMNT_STTS_PRVS,
    nullif(cast(PAST_DUE_DATE as DATE),null) as PAST_DUE_DATE, --DT_PST_D,
    nullif(cast(IMPAIRMENT_ASSESSMENT_METHOD as BIGINT),null) as IMPAIRMENT_ASSESSMENT_METHOD, --IMPRMNT_ASSSSMNT_MTHD,
    nullif(cast(IMPAIRMENT_CALCULATION_METHOD as BIGINT),null) as IMPAIRMENT_CALCULATION_METHOD, --IMPRMNT_CLCLTN_MTHD,
    nullif(cast(FORBEARANCE_NUMBER as BIGINT),null) as FORBEARANCE_NUMBER, --NMBR_FRBRNC_MSRS,
    -- Indicators
    nullif(cast(CORRELATION_COEFFICIENT as FLOAT),null) as CORRELATION_COEFFICIENT, --CRRLTN_CFFCNT,
    nullif(cast(LGD_IFRS9 as FLOAT),null) as LGD_IFRS9, --IFRS9_LGD,
    nullif(cast(LGD as FLOAT),null) as LGD,
    nullif(cast(LTV as FLOAT),null) as LTV,
    nullif(cast(LTV_INCEPTION as FLOAT),null) as LTV_INCEPTION, --LTV_INCPTN,
    nullif(cast(LTV_NONPERFORMING as FLOAT),null) as LTV_NONPERFORMING, --LTV_NPE,
    nullif(cast(PROBABILITY_OF_DEFAULT_CRR_INCEPTION as FLOAT),null) as PROBABILITY_OF_DEFAULT_CRR_INCEPTION, --PD_CRR_INCPTN,
    nullif(cast(PROBABILITY_OF_DEFAULT_CRR as FLOAT),null) as PROBABILITY_OF_DEFAULT_CRR, --PD_CRR_RD,
    nullif(cast(PROBABILITY_OF_DEFAULT_CRR_PREV_YEAR as FLOAT),null) as PROBABILITY_OF_DEFAULT_CRR_PREV_YEAR, --PD_CRR_RD_T1,
    nullif(cast(PROBABILITY_OF_DEFAULT_IFRS9_12M_INCEPTION as FLOAT),null) as PROBABILITY_OF_DEFAULT_IFRS9_12M_INCEPTION, --PD_IFRS9_12M_INCPTN,
    nullif(cast(PROBABILITY_OF_DEFAULT_IFRS9_12M as FLOAT),null) as PROBABILITY_OF_DEFAULT_IFRS9_12M, --PD_IFRS9_12M_RD,
    nullif(cast(PROBABILITY_OF_DEFAULT_IFRS9_12M_PREV_YEAR as FLOAT),null) as PROBABILITY_OF_DEFAULT_IFRS9_12M_PREV_YEAR, --PD_IFRS9_12M_RD_T1,
    nullif(cast(PROBABILITY_OF_DEFAULT_IFRS9_LIFETIME_INCEPTION as FLOAT),null) as PROBABILITY_OF_DEFAULT_IFRS9_LIFETIME_INCEPTION, --PD_IFRS9_LFTM_INCPTN,
    nullif(cast(PROBABILITY_OF_DEFAULT_IFRS9_RMNNG_LIFETIME_INCEPTION as FLOAT),null) as PROBABILITY_OF_DEFAULT_IFRS9_RMNNG_LIFETIME_INCEPTION, --PD_IFRS9_RMNNG_LFTM_INCPTN,
    nullif(cast(PROBABILITY_OF_DEFAULT_IFRS9_RMNNG_LIFETIME as FLOAT),null) as PROBABILITY_OF_DEFAULT_IFRS9_RMNNG_LIFETIME, --PD_IFRS9_RMNNG_LFTM_RD,
    nullif(cast(RATING_METHOD as VARCHAR(4)),null) as RATING_METHOD, --RTNG_MTHD, -- Oder INTEGER???
    nullif(cast(RATING_SCALE as BIGINT),null) as RATING_SCALE, --RTNG_SCL,
    nullif(cast(SIGNIFICANT_INCREASE_ASSESSMENT_METHOD as BIGINT),null) as SIGNIFICANT_INCREASE_ASSESSMENT_METHOD, --SICR_ASSSSMNT_MTHD,
    -- Interest Rates
    nullif(cast(INTEREST_RATE as FLOAT),null) as INTEREST_RATE, --ANNLSD_AGRD_RT,
    nullif(cast(EFFECTIVE_INTEREST_RATE as FLOAT),null) as EFFECTIVE_INTEREST_RATE, --EIR,
    nullif(cast(EFFECTIVE_INTEREST_RATE_INCEPTION as FLOAT),null) as EFFECTIVE_INTEREST_RATE_INCEPTION, --EIR_INCPTN,
    nullif(cast(INTEREST_RATE_RESET_FREQUENCY as BIGINT),null) as INTEREST_RATE_RESET_FREQUENCY, --INTRST_RT_RST_FRQNCY,
    -- Optional
    nullif(cast(ADD_NMRC1 as FLOAT),null) as ADD_NMRC1,
    nullif(cast(ADD_NMRC2 as FLOAT),null) as ADD_NMRC2,
    nullif(cast(ADD_NMRC3 as FLOAT),null) as ADD_NMRC3,
    nullif(cast(ADD_NMRC4 as FLOAT),null) as ADD_NMRC4,
    nullif(cast(ADD_DT1 as DATE),null) as ADD_DT1,
    nullif(cast(ADD_DT2 as DATE),null) as ADD_DT2,
    nullif(cast(ADD_DT3 as DATE),null) as ADD_DT3,
    nullif(cast(ADD_TXT1 as VARCHAR(255)),null) as ADD_TXT1,
    nullif(cast(ADD_TXT2 as VARCHAR(255)),null) as ADD_TXT2,
    nullif(cast(ADD_TXT3 as VARCHAR(255)),null) as ADD_TXT3,
    -- Servicing
    nullif(cast(RECEIVED_AMORTIZATION_12M as FLOAT),null) as RECEIVED_AMORTIZATION_12M, --RCVD_AMRTSTN_12M,
    nullif(cast(RECEIVED_AMORTIZATION_24M as FLOAT),null) as RECEIVED_AMORTIZATION_24M, --RCVD_AMRTSTN_24M,
    nullif(cast(RECEIVED_INTEREST_12M as FLOAT),null) as RECEIVED_INTEREST_12M, --RCVD_INTRST_12M,
    nullif(cast(RECEIVED_INTEREST_24M as FLOAT),null) as RECEIVED_INTEREST_24M, --RCVD_INTRST_24M,
    -- Syndication
    nullif(cast(SYNDICATE_LENDER_ROLE as BIGINT),null) as SYNDICATE_LENDER_ROLE, --SYNDCT_RL,
    nullif(cast(SYNDICATE_AGENT_NAME as VARCHAR(255)),null) as SYNDICATE_AGENT_NAME, --SYNDCTD_AGNT,
    nullif(cast(SYNDICATED_CONTRACT_ID as VARCHAR(60)),null) as SYNDICATED_CONTRACT_ID, --SYNDCTD_CNTRCT_ID,
    nullif(cast(SYNDICATE_LENDERS_NAMES as VARCHAR(255)),null) as SYNDICATE_LENDERS_NAMES, --SYNDCTD_LNDRS,
    nullif(cast(SYNDICATE_SHARE as FLOAT),null) as SYNDICATE_SHARE, --SYNDCTD_SHR,
    nullif(cast(SYNDICATION_TYPE as BIGINT),null) as SYNDICATION_TYPE, --SYNDCTN_TYP,
    -- COVID19
    nullif(cast(EBA_CMPLNT_MRTR_ST_C19 as BIGINT),null) as EBA_CMPLNT_MRTR_ST_C19,
    nullif(cast(DT_CMPLNT_MRTR_STTS_C19 as DATE),null) as DT_CMPLNT_MRTR_STTS_C19,
    nullif(cast(DT_CMPLNT_MRTR_STTS_PRVS_C19 as DATE),null) as DT_CMPLNT_MRTR_STTS_PRVS_C19,
    nullif(cast(MTRTY_LTST_MRTR_C19 as BIGINT),null) as MTRTY_LTST_MRTR_C19,
    nullif(cast(TYP_CMPLNT_MRTR_C19 as BIGINT),null) as TYP_CMPLNT_MRTR_C19,
    nullif(cast(GRC_PRD_CPTL_INTRST_C19 as BOOLEAN), null) as GRC_PRD_CPTL_INTRST_C19,
    nullif(cast(CMPLNT_MRTR_C19_NM as VARCHAR(255)),null) as CMPLNT_MRTR_C19_NM,
    nullif(cast(FRBRNC_STTS_C19 as BIGINT),null) as FRBRNC_STTS_C19,
    nullif(cast(DT_FRBRNC_STTS_C19 as DATE),null) as DT_FRBRNC_STTS_C19,
    nullif(cast(DT_FRBRNC_STTS_PRVS_C19 as DATE),null) as DT_FRBRNC_STTS_PRVS_C19,
    nullif(cast(MTRTY_LTST_FRBRNC_MSR_C19 as BIGINT),null) as MTRTY_LTST_FRBRNC_MSR_C19,
    nullif(cast(DT_END_GP_PPAL_C19 as DATE),null) as DT_END_GP_PPAL_C19,
    nullif(cast(DT_END_INTRST_ONLY_C19 as DATE),null) as DT_END_INTRST_ONLY_C19,
    nullif(cast(SBJCT_PBLC_GRNT_SCHM_C19 as BIGINT),null) as SBJCT_PBLC_GRNT_SCHM_C19,
    nullif(cast(PBLC_GRNT_SCHM_C19_NM as VARCHAR(255)),null) as PBLC_GRNT_SCHM_C19_NM,
    nullif(cast(PMNT_PBLC_GRNT_SCHM_C19 as FLOAT),null) as PMNT_PBLC_GRNT_SCHM_C19,
    USER as CREATED_USER,
    CURRENT_TIMESTAMP as CREATED_TIMESTAMP
from data;
------------------------------------------------------------------------------------------------------------------------


-- CI START FOR ALL TAPES

-- Current-Tabelle erstellen
------------------------------------------------------------------------------------------------------------------------
call STG.TEST_PROC_BACKUP_AND_DROP('AMC','TABLE_FACILITY_INSTRUMENT_CURRENT');
create table AMC.TABLE_FACILITY_INSTRUMENT_CURRENT like CALC.VIEW_FACILITY_INSTRUMENT distribute by hash(FACILITY_ID) in SPACE_AMC_A,SPACE_AMC_B,SPACE_AMC_C,SPACE_AMC_D,SPACE_AMC_E,SPACE_AMC_F;
create index AMC.INDEX_FACILITY_INSTRUMENT_CURRENT_FACILITY_ID on AMC.TABLE_FACILITY_INSTRUMENT_CURRENT (FACILITY_ID);
call STG.TEST_PROC_LOAD_AND_DROP_BACKUP_FOR('AMC','TABLE_FACILITY_INSTRUMENT_CURRENT');
------------------------------------------------------------------------------------------------------------------------

-- Archiv-Tabelle erstellen
------------------------------------------------------------------------------------------------------------------------
call STG.TEST_PROC_BACKUP_AND_DROP('AMC','TABLE_FACILITY_INSTRUMENT_ARCHIVE');
create table AMC.TABLE_FACILITY_INSTRUMENT_ARCHIVE like CALC.VIEW_FACILITY_INSTRUMENT distribute by hash(FACILITY_ID) partition by RANGE (CUT_OFF_DATE) (starting '1.1.2015' ending '31.12.2030' EVERY 1 Month) in SPACE_AMC_A,SPACE_AMC_B,SPACE_AMC_C,SPACE_AMC_D,SPACE_AMC_E,SPACE_AMC_F;
create index AMC.INDEX_FACILITY_INSTRUMENT_ARCHIVE_FACILITY_ID on AMC.TABLE_FACILITY_INSTRUMENT_ARCHIVE (FACILITY_ID);
call STG.TEST_PROC_LOAD_AND_DROP_BACKUP_FOR('AMC','TABLE_FACILITY_INSTRUMENT_ARCHIVE');
------------------------------------------------------------------------------------------------------------------------

-- CI END FOR ALL TAPES

-- SWITCHES erstellen
------------------------------------------------------------------------------------------------------------------------
call STG.TEST_PROC_DROP_AND_CREATE_SWITCH('AMC','TABLE_FACILITY_INSTRUMENT_CURRENT');
call STG.TEST_PROC_DROP_AND_CREATE_SWITCH('AMC','TABLE_FACILITY_INSTRUMENT_ARCHIVE');
------------------------------------------------------------------------------------------------------------------------

