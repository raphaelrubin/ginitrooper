/*In dieser Datei wird eine leere FACILITY ARCHIVE Tabelle und die zugehörige SWITCH erzeugt. Dadurch können die Views
  in den folgenden Dateien von der CALC.SWITCH_FACILITY_ARCHIVE gebrauch machen, bevor sie aus basis der CURRENT
  Tabelle definiert wurde. Für die CI ist dies unerlässlich. */

-- Der folgende Code hilft dabei, diese Tabellendefinition zu aktualisieren:
-- select COLNAME || ' ' || TYPENAME || case when STRINGUNITSLENGTH is not NULL then '('||STRINGUNITSLENGTH||')' else '' end || case when NULLS = 'N' then ' NOT NULL' else '' end ||','
-- from SYSCAT.COLUMNS
-- where TABNAME = 'TABLE_FACILITY_ARCHIVE' and TABSCHEMA = 'AMC' order by COLNO;

-- ARCHIVE TABLE erstellen
------------------------------------------------------------------------------------------------------------------------
call STG.TEST_PROC_BACKUP_AND_DROP('FKW','TABLE_FACILITY_ARCHIVE');
create table FKW.TABLE_FACILITY_ARCHIVE
(
    CUT_OFF_DATE DATE,
    DATA_CUT_OFF_DATE DATE,
    BRANCH_FACILITY CHARACTER(8),
    FACILITY_ID VARCHAR(64),
    FACILITY_ID_LEADING VARCHAR(64),
    FACILITY_ID_ALTERNATIVE VARCHAR(64),
    LEADING_FACILITY_ID VARCHAR(50),
    PARENT_FACILITY_ID VARCHAR(500),
    CORRESPONDING_LIMIT_ID VARCHAR(64),
    SYSTEM_SATZART VARCHAR(5),
    PRODUCT_GROUP VARCHAR(25),
    PRODUCTTYPE VARCHAR(500),
    PRODUCT_BW BIGINT,
    PRODUCT_BW_TEXT VARCHAR(256),
    IN_SPOT BOOLEAN NOT NULL,
    IN_BW BOOLEAN NOT NULL,
    PRIMARY_SOURCE VARCHAR(64),
    BRANCH VARCHAR(8),
    PORTFOLIO_CLIENT_PERSON_IWHS VARCHAR(1024),
    KUSY BIGINT,
    SEGMENT BIGINT,
    CLIENT_ID VARCHAR(555),
    CLIENT_ID_LEADING VARCHAR(32),
    CLIENT_NO_BW VARCHAR(4000),
    CLIENT_TYPE VARCHAR(500),
    CLIENT_NAME VARCHAR(500),
    CLIENT_NAME_ANONYMIZED VARCHAR(500),
    CLIENT_COUNTRY_ALPHA2 VARCHAR(10),
    CLIENT_NACE VARCHAR(500),
    GROUP_ID VARCHAR(31),
    GROUP_NAME VARCHAR(500),
    GVK_BUNDESBANKNUMMER BIGINT,
    CURRENCY VARCHAR(50),
    CURRENCY_BW VARCHAR(1),
    SYNDICATION_ROLE VARCHAR(500),
    SYNDICATION_QUOTA DOUBLE,
    ORIGINATION_DATE DATE,
    CURRENT_CONTRACTUAL_MATURITY_DATE DATE,
    RATING_MODULE_CLIENT VARCHAR(50),
    RATING_ID_ZEB VARCHAR(10),
    RATING_MODULE_ZEB VARCHAR(500),
    RATING_SUBMODULE_ZEB VARCHAR(500),
    RATING_MODULE_BW VARCHAR(1),
    RATING_MODULE_NAME_BW VARCHAR(1),
    RATING_SUBMODULE_BW VARCHAR(1),
    RATING_MODULE_DESCRIPTION_BW VARCHAR(1),
    PERFORMANCE_STATUS VARCHAR(14),
    RATING_ALPHA VARCHAR(7),
    RATING_ALPHA_PREV_YEAR VARCHAR(7),
    RATING_ALPHA_IRBA VARCHAR(7),
    RATING_NUMERIC_IRBA INTEGER,
    RATING_ALPHA_KSA VARCHAR(7),
    RATING_NUMERIC_KSA INTEGER,
    RATING_NUMERIC_FVC INTEGER,
    RATING_DATE_FVC DATE,
    RATING_BW INTEGER,
    RATING_BW_TYPE VARCHAR(4000),
    RATING_MODUL_KUNDE VARCHAR(50),
    RATING_ID_KUNDE BIGINT,
    PRINCIPAL_TYPE VARCHAR(12) NOT NULL,
    PRINCIPAL_OUTSTANDING_EUR_SPOT_RAW DOUBLE,
    PRINCIPAL_OUTSTANDING_EUR_SPOT DOUBLE,
    PRINCIPAL_OUTSTANDING_EUR_AVAL DOUBLE NOT NULL,
    PRINCIPAL_OUTSTANDING_EUR_BW DOUBLE,
    PRINCIPAL_OUTSTANDING_EUR_KR DOUBLE,
    PRINCIPAL_OUTSTANDING_EUR_COMPENSATION DOUBLE,
    OWN_SYNDICATE_QUOTA DOUBLE,
    DRAWDOWN_SPOT VARCHAR(1),
    DRAWDOWN_BW VARCHAR(1),
    BILANZWERT_BRUTTO_EUR DOUBLE,
    BILANZWERT_BRUTTO_TC DOUBLE,
    BILANZWERT_IFRS9_EUR DOUBLE,
    BILANZWERT_IFRS9_TC DOUBLE,
    BILANZWERT_HGB_EUR DOUBLE,
    BILANZWERT_HGB_TC DOUBLE,
    EAD_EUR_ZEB DOUBLE,
    EAD_TC_ZEB DOUBLE,
    EAD_TOTAL_EUR DOUBLE,
    EAD_TOTAL_TC_ZEB DOUBLE,
    EAD_NON_SECURITIZED_EUR DOUBLE,
    EAD_SECURITIZED DOUBLE,
    EAD_BW DOUBLE,
    EL_BW DOUBLE,
    LGD_COLL_RATE_ZEB DOUBLE,
    LGD_NET_RATE_ZEB DOUBLE,
    LGD_DEFAULT_RATE_ZEB DOUBLE,
    LGD_PERCENT_FVC DOUBLE,
    LGD_DEFAULT_RATE_BW DOUBLE,
    AMORTIZATION_IN_ARREARS_EUR_SPOT_RAW DOUBLE,
    AMORTIZATION_IN_ARREARS_EUR_SPOT DOUBLE,
    AMORTIZATION_IN_ARREARS_EUR_BW DOUBLE,
    AMORTIZATION_IN_ARREARS_FOR_COMPENSATION DOUBLE,
    INTEREST_IN_ARREARS_EUR_SPOT_RAW DOUBLE,
    INTEREST_IN_ARREARS_EUR_SPOT DOUBLE,
    INTEREST_IN_ARREARS_EUR_BW DOUBLE,
    INTEREST_IN_ARREARS_FOR_COMPENSATION DOUBLE,
    FEES_IN_ARREARS_EUR_SPOT_RAW DOUBLE,
    FEES_IN_ARREARS_EUR_SPOT DOUBLE,
    BLANKO_BW VARCHAR(1),
    OFFBALANCE_EUR DOUBLE,
    OFFBALANCE_TC DOUBLE,
    SAP_INANSPRUCHNAHME DOUBLE,
    SAP_EWBTES DOUBLE,
    RIVO_STAGE VARCHAR(4),
    RIVO_STAGE_1_EUR DOUBLE,
    RIVO_STAGE_2_EUR DOUBLE,
    RIVO_STAGE_3_EUR DOUBLE,
    RIVO_STAGE_POCI_EUR DOUBLE,
    SPECIFIC_PROVISION_AMOUNT_EUR DOUBLE,
    SPECIFIC_PROVISION_AMOUNT_OC DOUBLE,
    LOAN_LOSS_PROVISION_AMOUNT_EUR DOUBLE,
    LOAN_LOSS_PROVISION_AMOUNT_OC DOUBLE,
    RISK_PROVISION_ABIT_EXCHANGE_RATE_EUR2OC DOUBLE,
    RISK_PROVISION_ZEB_EXCHANGE_RATE_EUR2OC DOUBLE,
    RISK_PROVISION_ZEB_EXCHANGE_RATE_EUR2OC_LAST_YEAR DOUBLE,
    ZEB_STAGE_ONBALANCE VARCHAR(32),
    ZEB_STAGE_ONBALANCE_LAST_YEAR VARCHAR(32),
    ZEB_EWB_EUR_ONBALANCE DOUBLE,
    ZEB_EWB_EUR_ONBALANCE_LAST_YEAR DOUBLE,
    ZEB_EWB_OC_ONBALANCE DOUBLE,
    ZEB_EWB_OC_ONBALANCE_LAST_YEAR DOUBLE,
    ZEB_STAGE_OFFBALANCE VARCHAR(32),
    ZEB_STAGE_OFFBALANCE_LAST_YEAR VARCHAR(32),
    ZEB_EWB_EUR_OFFBALANCE DOUBLE,
    ZEB_EWB_EUR_OFFBALANCE_LAST_YEAR DOUBLE,
    ZEB_EWB_OC_OFFBALANCE DOUBLE,
    ZEB_EWB_OC_OFFBALANCE_LAST_YEAR DOUBLE,
    FAIR_VALUE_ADJUSTMENT_EUR DOUBLE,
    FAIR_VALUE_ADJUSTMENT_TC DOUBLE,
    RECOURSE DECFLOAT,
    RISK_PROVISION_EUR DOUBLE,
    RISK_PROVISION_TC DOUBLE,
    FVC_RISIKOGEWICHT_IN_PROZENT DOUBLE,
    PAST_DUE_TOTAL_EUR VARCHAR(1),
    DAYS_PAST_DUE_ZEB BIGINT,
    DAYS_PAST_DUE_BW BIGINT,
    PROBABILITY_OF_DEFAULT_RATE_BW DOUBLE,
    PROBABILITY_OF_DEFAULT_RATE_ZEB DOUBLE,
    DEFAULT_BW INTEGER,
    CREDIT_CONVERSION_FACTOR_BW DOUBLE,
    AUSZAHLUNGSPLICHT_EUR DOUBLE,
    FREIE_LINIE DOUBLE,
    FREIE_LINIE_LAST_YEAR DOUBLE,
    PRJ_IS_FINREP_FORBORNE VARCHAR(500),
    IS_IN_GUARANTEE BOOLEAN,
    IS_NOT_IN_BW_REWE INTEGER,
    IS_INACTIVE INTEGER,
    IS_FACILITY_FROM_SINGAPORE BOOLEAN,
    IS_PWC_FOCUS BOOLEAN NOT NULL,
    IS_AVAL BOOLEAN,
    PRODUCTTYPE_DETAIL VARCHAR(500),
    PORTFOLIO_CLIENT_SIMPLIFIED VARCHAR(1024),
    PRINCIPAL_OUTSTANDING_EUR_SEGUE DOUBLE,
    CREATED_USER VARCHAR(128) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP NOT NULL
);
call STG.TEST_PROC_LOAD_AND_DROP_BACKUP_FOR('FKW','TABLE_FACILITY_ARCHIVE');
------------------------------------------------------------------------------------------------------------------------

call SYSPROC.ADMIN_CMD('reorg table FKW.TABLE_FACILITY_ARCHIVE');

-- SWITCH erstellen
------------------------------------------------------------------------------------------------------------------------
call STG.TEST_PROC_DROP_AND_CREATE_SWITCH('FKW','TABLE_FACILITY_ARCHIVE');
------------------------------------------------------------------------------------------------------------------------
